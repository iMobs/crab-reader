# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
#
# While our "example" application has the platform-specific code,
# for simplicity we are compiling and testing everything on the Ubuntu environment only.
# For multi-OS testing see the `cross.yml` workflow.

on:
  push:
    branches: ["main"]
    # TODO: Add tags for release
  pull_request:
    branches: ["main"]

name: Continuous Integration

jobs:
  lint-ts:
    name: Lint Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn lint

  test-ts:
    name: Test Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn test

  check-rust:
    name: Check Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      # TODO: see if there's a better way to set working directory
      - run: cd src-tauri

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # TODO: add caching?

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test-rust:
    name: Test Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - run: cd src-tauri

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  lint-rust:
    name: Lint Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - run: cd src-tauri

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
