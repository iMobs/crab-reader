on:
  push:
    branches: ['main']
    # TODO: Add tags for release
  pull_request:
    branches: ['main']

name: Continuous Integration

jobs:
  lint-ts:
    name: Lint Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn lint

  test-ts:
    name: Test Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn test

  lint-rust:
    name: Lint Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Run cargo check
        run: cargo check
        working-directory: src-tauri

      - name: Run cargo fmt
        run: cargo fmt --all -- --check
        working-directory: src-tauri

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings
        working-directory: src-tauri

  test-rust:
    name: Test Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Run cargo test
        run: cargo test
        working-directory: src-tauri

  build:
    strategy:
      fail-fast: true
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']

    runs-on: ${{ matrix.os }}

    needs:
      - 'lint-ts'
      - 'test-ts'
      - 'lint-rust'
      - 'test-rust'

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - run: yarn install --frozen-lockfile

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # with:
        #   tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
        #   releaseName: 'App v__VERSION__'
        #   releaseBody: 'See the assets to download this version and install.'
        #   releaseDraft: true
        #   prerelease: false
